/* Imagen de fondo en un contenedor */
.background {
    /* 50% del alto del viewport (Ventana gráfica) */
    height: 50vh;

    background-image: url(images/office.jpg);

    /* background-position-x: center;
    background-position-y: center; */
    background-position: center center;

    background-repeat: no-repeat;
    background-size: cover;

    /* Si queremos que quede fija respecto al scroll: */
    /* background-attachment: fixed; */
}

/* Centrar a lo ancho */
.centered-x {
    height: 50px;
    width: 25%;
    background-color: seagreen;

    margin: auto;
}

/* Posición absoluta dentro de contenedor, centrado en ambos ejes */
.pos-absolute-parent {
    height: 300px;
    border: 15px solid tomato;

    position: relative;
}

.pos-absolute-child {
    height: 50px;
    width: 50px;
    background-color: #333;

    position: absolute;
    top: 50%;
    left: 50%;

    /* Con las dos instrucciones anteriores, empezamos a "dibujar"
    la esquina superior izquierda del cuadrado en el centro 
    del padre. Quedando el cuadrado desplazado hacia abajo y hacia
    la derecha su propio tamaño. Para contrarrestar esto último, 
    pongo márgenes negativos en la dirección opuesta.
    Explicación detallada en a partir del minuto 22:30 del 
    Módulo 2: Sesión 9. */
    margin-top: -25px;
    margin-left: -25px;
}

/* Posición relativa */
.pos-relative {
    height: 50px;
    width: 50px;
    background-color: seagreen;

    position: relative;
    top: -30px;
    left: 150px;

    margin-bottom: 20px;
}

/* Posicionamiento sticky */
.sticky {
    background-color: aquamarine;
    padding: 15px 25px;

    position: sticky;
    position: -webkit-sticky;
    top:0;
    z-index: 1;
}

/* Posicionamiento flotante: divs dentro de otros divs */
.parent {
    border: 5px solid aqua;
    margin-bottom: 20px;

    /* Para gestionar desbordamiento de contenido o para que el padre
    no colapse si todos los hijos son flotantes (ya que no tendrían
    tamaño virtual al estar flotando), podemos utilizar overflow
    hidden / auto y obligamos al padre a abarcar a los hijos. */
    overflow: hidden;
}

.child-1 {
    background-color: brown;
    height: 100px;
    width: 33.3%;

    /* Elemento flotante */
    float: left;

    /* Ajeno a posicionamiento flotante, para demostrar
    que podemos mezclar los conceptos hasta ahora vistos. */
    position: relative;
    top: 15px;
    left: 15px;
}

.child-2 {
    background-color: darkblue;
    height: 100px;
    width: 33.3%;
    float: right;
}

.child-2-1 {
    background-color: gray;
    height: 50%;
    width: 33.3%;
    float: right;
}

.child-2-2 {
    background-color: gainsboro;
    height: 30%;
    width: 30%;
    float: left;
}

.child-3 {
    /* Este no tiene clear, por lo que colapsará
    en el espacio de los anteriores */
    height: 50px;
    background-color: darkorange;
}

.child-4 {
    clear: both;
    height: 50px;
    background-color: yellowgreen;
    width: 100%;
}

/* Posicionamiento fijo */
.fixed {
    background-color: #333;
    padding: 20px 30px;

    position: fixed;
    bottom: 30px;
    right: 30px;
}

.fixed a {
    text-decoration: none;
    color: white;
}

/* Tamaño de cajas (box-sizing) */
.box-sizing-parent {
    width: 200px;
    height: 200px;
    border: 10px solid goldenrod;
    padding-top: 10px;

    box-sizing: border-box;
}

.box-sizing-child {
    width: 100%;
    height: 50px;
    background-color: gray;
    border: 10px solid darkolivegreen;
}

.border-box {
    margin-top: 10px;

    box-sizing: border-box;
}

/* Tipos de Display: inline, block, inline-block */
.box-1, .box-2, .box-3, .box-4, .box-5, .box-6 {
    background-color: darkslategray;
}

.box-3, .box-4, .box-3 p, .box-4 p {
    display: inline-block;
}

.box-5, .box-6, .box-5 p, .box-6 p {
    display: inline;
}

/* Overflow - Gestión del contenido
que es más grande que su contenedor. */
.overflow-parent {
    width: 200px;
    border: 3px dashed black;
    height: 100px;
    margin-bottom: 100px;

    overflow: hidden;
}

.overflow-parent-2 {
    width: 200px;
    border: 3px dashed black;
    height: 100px;
    margin-bottom: 100px;

    overflow: visible;
}

.overflow-parent-3 {
    width: 200px;
    border: 3px dashed black;
    height: 100px;
    margin-bottom: 15px;

    overflow: scroll;
}

/* Flexbox */
.flex-parent {
    height: 250px;
    padding: 20px;
    background-color: indianred;
    
    display: flex;
    /* flex-direction: row;*/
    /* flex-wrap: wrap; */
    flex-flow: row wrap;
    gap: 10px;

    justify-content: center;
    align-items: center;
}

.flex-parent > div:nth-child(even) {
    background-color: #ddd;
    color: #333;
}

.flex-parent > div:nth-child(odd) {
    background-color: #333;
    color: #ddd;
}

[class^="flex-child-"] {
    width: 250px;

    display: flex;
    justify-content: center;
    align-items: center;

    /* flex-grow: 1; */
}

.flex-child-1 {
    /* order: 3; */
    /* flex: 1 1 auto; */
    align-self: flex-start;
}

.flex-child-2 {
    align-self: center;
    /* flex: 0 5 auto; */
}

.flex-child-3 {
    /* flex: 0 5 auto; */
    align-self: flex-end;
}

.flex-child-4 {
    /* flex: 0 5 auto; */
    align-self: stretch;
}

/* CSS Grid */
[class^=grid-child] {
    background-color: coral;
}

.grid-parent {
    display: grid;
    /* grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); */
    grid-template-columns: 1fr 2fr 1fr;
    grid-template-rows: 1fr 2fr;
    gap: 10px;
}

@media only screen and (max-width:920px) {
    .grid-parent {
        grid-template-columns: 1fr 2fr;
    }
}

@media only screen and (max-width:768px) {
    .grid-parent {
        grid-template-columns: 1fr;
    }
}

/* CSS Grid - Líneas */
.grid-parent-2 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
    gap: 10px;
}

.grid-parent-2 > .grid-child-1 {
    grid-column: 1 / 3;
    grid-row: 1;
}

.grid-parent-2 > .grid-child-2 {
    grid-column: 3;
    grid-row: 1 / 3;
}

.grid-parent-2 > .grid-child-3 {
    grid-column: 1 / 3;
    grid-row: 2 / 5;

    opacity: 0.7;
    z-index: -1;
}

.grid-parent-2 > .grid-child-4 {
    grid-column: 3;
    grid-row: 3;
}

.grid-parent-2 > .grid-child-5 {
    grid-column: 2 / 4;
    grid-row: 4;
}

.grid-parent-2 > .grid-child-6 {
    grid-column: 1;
    grid-row: 2;
}

/* CSS Grid - Áreas */
.grid-parent-3 {
    display: grid;
    grid-template-columns: 150px 2fr 2fr;
    grid-template-rows: 1fr 5fr 1fr;
    gap: 10px;

    grid-template-areas: "nav nav nav"
                         "content1 content2 content3"
                         "footer footer footer";

    /* justify-items: center;
    align-items: center; */
}

.grid-parent-3 > .grid-child-1 {
    grid-area: nav;
}

.grid-parent-3 > .grid-child-2 {
    grid-area: content1;
}

.grid-parent-3 > .grid-child-3 {
    grid-area: content2;
}

.grid-parent-3 > .grid-child-4 {
    grid-area: content3;
}

.grid-parent-3 > .grid-child-5 {
    grid-area: footer;
}

/* Degradados */
[class^=gradient-] {
    height: 100px;
    margin-bottom: 10px;
}

.gradient-1 {
    background: linear-gradient(to right, blueviolet, white)
}

.gradient-2 {
    background: linear-gradient(to bottom, blue, white 20%, orange);
}

.gradient-3 {
    background: linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,1)), url(../images/office.jpg);
}

.gradient-4 {
    background: radial-gradient(white 15%, rgb(192, 40, 40) 25%, coral 50%);
    box-shadow: 5px 5px 15px rgb(44, 44, 44);
}

/* Transformaciones */
.transformation {
    height: 100px;
    width: 100px;
    background-color: #333;

    transform: translate(300px, -20px) rotate(45deg) scale(1.3) skewX(25deg);
}

/* Transiciones */
.transitions {
    height: 100px;
    width: 100px;
    background-color: darkcyan;
    color: white;

    display: flex;
    justify-content: center;
    align-items: center;

    /* transition-property: transform;
    transition-duration: 0.5s;
    transition-timing-function: ease-in-out; */
    
    transition: all 0.5s ease-in-out;
}

.transitions:hover {
    /* color: darkcyan;
    background-color: white; */
    transform: scale(1.3) rotate(3deg);
}


/* Animaciones  */
.text-animation {
    animation-duration: 3s;
    animation-name: slidein;
    animation-iteration-count: infinite;
}

@keyframes slidein {
    from {
    margin-left: 100%;
    }

    50% {
        color: red;
    }

    to {
    margin-left: 0%;
    }
}